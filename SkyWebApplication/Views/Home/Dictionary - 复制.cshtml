@{
    ViewBag.Title = "Video";
}
@section Topcss {
    <link href="~/plugins/bootstrap-validator/css/bootstrapValidator.css" rel="stylesheet" type="text/css" />
    <link href="~/plugins/iCheck/square/green.css" rel="stylesheet" type="text/css" />
}

        <!-- Content Header (Page header) -->
        <section class="content-header">
            <h1>
                系统字典
                <small>advanced tables</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
                <li><a href="#">Tables</a></li>
                <li class="active">Data tables</li>
            </ol>
        </section>
        <!-- Main content -->
        <section class="content">
            <div class="row">
                <div class="col-xs-3">
                    <div class="box box-primary">
                        <div class="box-body">          
                            <div id="CategoryTreeview" class=""></div>
                        </div>                        
                    </div>
                    <!-- /.box -->
                </div>
                <!-- /.col -->
                <div class="col-xs-9">
                    <form class="form-horizontal" id="CategoryFrom" method="post">
                        <div class="box box-primary">
                            <div class="box-header with-border">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-default" id="AddTopCategory" name="CategoryBtn" onclick="categoryaction(this,'addtop')"> <i class="fa fa-plus"></i> 新增顶级字典</button>
                                    <button type="button" class="btn btn-default" id="AddNextCategory" name="CategoryBtn" onclick="categoryaction(this, 'addnext')"> <i class=" fa fa-plus"></i> 新增下级字典</button>
                                    <button type="button" class="btn btn-default" id="EditCategory" name="CategoryBtn" onclick="categoryaction(this, 'edit')"> <i class=" fa fa-edit"></i> 编辑当前字典</button>
                                    <button type="button" class="btn btn-default" id="DeleteCategory" name="CategoryBtn" onclick="categoryaction(this, 'delete')"> <i class=" fa fa-plus"></i> 删除当前字典</button>
                                </div>
                            </div>
                            <div class="box-body">

                                <div class="box-body">
                                    <div class="form-group">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" class="form-control" id="thisID" name="thisID">
                                        <input type="hidden" class="form-control" id="thisCategoryName" name="thisCategoryName">


                                        <label for="CategoryParentName" class="col-sm-2 control-label">上级字典</label>
                                        <div class="col-sm-10">
                                            <input type="hidden" class="form-control" id="CategoryParentID" name="CategoryParentID" placeholder="上级字典">

                                            <input type="text" class="form-control" id="CategoryParentName" name="CategoryParentName" placeholder="上级字典">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="CategoryName" class="col-sm-2 control-label">名称</label>
                                        <div class="col-sm-10">
                                            <input type="hidden" class="form-control" id="ID" name="ID" placeholder="名称">
                                            <input type="text" class="form-control" id="CategoryName" name="CategoryName" placeholder="名称">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="CategorySort" class="col-sm-2 control-label">排序</label>
                                        <div class="col-sm-10">
                                            <input type="text" class="form-control" id="CategorySort" name="CategorySort" placeholder="排序">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="CategoryStatus" class="col-sm-2 control-label">是否可用</label>
                                        <div class="col-sm-10">
                                            <input type="radio" name="CategoryStatus" value="true">  启用
                                            <input type="radio" name="CategoryStatus" value="false"> 禁用
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="CategoryInfo" class="col-sm-2 control-label">说明</label>
                                        <div class="col-sm-10">
                                            <textarea class="form-control" rows="3" id="CategoryInfo" name="CategoryInfo" placeholder="说明 ..."></textarea>
                                        </div>
                                    </div>

                                </div>
                                <!-- /.box-body -->

                            </div>
                            <div class="box-footer">
                                <div class="text-center">
                                    <button type="button" class="btn btn-default" id="btnback"><i class="fa fa-reply"></i> 返回</button>
                                    <button type="submit" class="btn btn-primary" id="btnsave"><span class="fa  fa-save"></span> 保存</button>
                                </div>
                            </div>


                        </div>
                    </form>
                    <!-- /.box -->
                </div>
            </div>
            <!-- /.row -->
        </section>
        <!-- /.content -->
@section FootScripts {
<script src="/plugins/bootstrap-treeview.js"></script>
<script type="text/javascript" src="/plugins/iCheck/icheck.js"></script>
<script type="text/javascript" src="/plugins/bootstrap-validator/js/bootstrapValidator.js"></script>
<script type="text/javascript" src="/plugins/bootbox.min.js"></script>
<script type="text/javascript" src="/Resource/js/SkyWeb.js"></script>


<script>
    var form =null;
    $(function() {
        //初始化form表单
        form=$("#dict-form").form();

        initTree(0);
        //初始化校验
        $("#dict-form").bootstrapValidator({
            message : '请输入有效值',
            feedbackIcons : {
                valid : 'glyphicon glyphicon-ok',
                invalid : 'glyphicon glyphicon-remove',
                validating : 'glyphicon glyphicon-refresh'
            },
            submitHandler : function(validator, dictform, submitButton) {
                modals.confirm('确认保存？', function() {
                    //Save Data，对应'submit-提交'
                    var params = form.getFormSimpleData();
                    ajaxPost(basePath + '/dict/save', params, function(data, status) {
                        if (data.success) {
                            //var id=$("input[name='id']").val();
                            var selectedArr=$("#tree").data("treeview").getSelected();
                            var selectedNodeId=selectedArr.length>0?selectedArr[0].nodeId:0;
                            initTree(selectedNodeId);
                        }
                    });
                });
            },
            fields : {
                name : {
                    validators : {
                        notEmpty : {
                            message : '请输入名称'
                        }
                    }
                },
                code : {
                    validators : {
                        notEmpty : {
                            message : '请输入编码'
                        },
                        remote:{
                            url:basePath+"/base/checkUnique",
                            data: function(validator) {
                                return {
                                    className:'com.cnpc.framework.base.entity.Dict',
                                    fieldName:'code',
                                    fieldValue:$('#code').val(),
                                    id:$('#id').val()
                                };
                            },
                            message:'该编码已被使用'
                        }
                    }
                },
                levelCode : {
                    validators : {
                        notEmpty : {
                            message : '请输入层级编码'
                        }
                    }
                },
                deleted : {
                    validators : {
                        notEmpty : {
                            message : '请选择是否可用'
                        }
                    }
                }
            }
        });

        form.initComponent();
        //按钮事件
        var btntype=null;
        $('button[data-btn-type]').click(function() {
            var action = $(this).attr('data-btn-type');
            var selectedArr=$("#tree").data("treeview").getSelected();
            var selectedNode=selectedArr.length>0?selectedArr[0]:null;
            switch (action) {
                case 'addRoot':
                    formWritable(action);
                    form.clearForm();
                    //填充上级字典和层级编码
                    fillParentAndLevelCode(null);
                    btntype='add';
                    break;
                case 'add':
                    if(!selectedNode){
                        modals.info('请先选择上级字典');
                        return false;
                    }
                    formWritable(action);
                    form.clearForm();
                    //填充上级字典和层级编码
                    fillParentAndLevelCode(selectedNode);
                    btntype='add';
                    break;
                case 'edit':
                    if(!selectedNode){
                        modals.info('请先选择要编辑的节点');
                        return false;
                    }
                    if(btntype=='add'){
                        fillDictForm(selectedNode);
                    }
                    formWritable(action);
                    btntype='edit';
                    break;
                case 'delete':
                    if(!selectedNode){
                        modals.info('请先选择要删除的节点');
                        return false;
                    }
                    if(btntype=='add')
                        fillDictForm(selectedNode);
                    formReadonly();
                    $(".box-header button[data-btn-type='delete']").removeClass("btn-default").addClass("btn-primary"
);
                    if(selectedNode.nodes){
                        modals.info('该节点含有子节点，请先删除子节点');
                        return false;
                    }
                    modals.confirm('是否删除该节点',function(){
                        ajaxPost(basePath+"/dict/delete/"+selectedNode.id,null,function(data){
                            if(data.success){
                                modals.correct('删除成功');
                            }else{
                                modals.info(data.message);
                            }
                            //定位
                            var brothers=$("#tree").data("treeview").getSiblings(selectedNode);
                            if(brothers.length>0)
                                initTree(brothers[brothers.length-1].nodeId);
                            else{
                                var parent=$("#tree").data("treeview").getParent(selectedNode);
                                initTree(parent?parent.nodeId:0);
                            }
                        });
                    });
                    break;
                case 'cancel':
                    if(btntype=='add')
                        fillDictForm(selectedNode);
                    formReadonly();
                    break;
            }
        });
    })

    function initTree(selectNodeId){
        var treeData = null;
        ajaxPost(basePath + "/dict/treeData", null, function(data) {
            treeData = data;
            //console.log(treeData);
        });
        $("#tree").treeview({
            data : treeData,
            showBorder : true,
            expandIcon : "glyphicon glyphicon-stop",
            collapseIcon : "glyphicon glyphicon-unchecked",
            levels : 1,
            onNodeSelected : function(event, data) {
                /*   alert("i am selected");
                  alert(data.nodeId); */
                fillDictForm(data);
                formReadonly();
                //console.log(JSON.stringify(data));
            }
        });
        if(treeData.length==0)
            return;
        //默认选中第一个节点
        selectNodeId=selectNodeId||0;
        $("#tree").data('treeview').selectNode(selectNodeId);
        $("#tree").data('treeview').expandNode(selectNodeId);
        $("#tree").data('treeview').revealNode(selectNodeId);
    }

    //新增时，带入父级字典名称id,自动生成levelcode
    function fillParentAndLevelCode(selectedNode){
        $("input[name='parentName']").val(selectedNode?selectedNode.text:'系统字典');
        $("input[name='deleted'][value='0']").prop("checked","checked");
        if(selectedNode){
            $("input[name='parentId']").val(selectedNode.id);
            var nodes=selectedNode.nodes;
            var levelCode=nodes?nodes[nodes.length-1].levelCode:null;
            $("input[name='levelCode']").val(getNextCode(selectedNode.levelCode,levelCode,6));
        }else{
            var brothers=$("#tree").data("treeview").getSiblings(0);
            var levelCode="000000";
            if(brothers&&brothers.length>0)
                levelCode=brothers[brothers.length-1].levelCode;
            $("input[name='levelCode']").val(getNextCode("",levelCode,6));
        }
    }

    //填充form
    function fillDictForm(node){
        form.clearForm();
        ajaxPost(basePath+"/dict/get/"+node.id,null,function(data){
            form.initFormData(data);
        })
    }

    //设置form为只读
    function formReadonly(){
        //所有文本框只读
        $("input[name],textarea[name]").attr("readonly","readonly");
        //隐藏取消、保存按钮
        $("#dict-form .box-footer").hide();
        //还原新增、编辑、删除按钮样式
        $(".box-header button").removeClass("btn-primary").addClass("btn-default");
        //还原校验框
        if($("#dict-form").data('bootstrapValidator'))
            $("#dict-form").data('bootstrapValidator').resetForm();
    }

    function formWritable(action){
        $("input[name],textarea[name]").removeAttr("readonly");
        $("#dict-form .box-footer").show();
        $(".box-header button").removeClass("btn-primary").addClass("btn-default");
        if(action)
            $(".box-header button[data-btn-type='"+action+"']").removeClass("btn-default").addClass("btn-primary");
    }

    </script>
    <script type="text/javascript">

        //初始化页面

        //加载树形菜单
        LoadTreeDictionary();
    //加载icheck的样式，初始化加载一次，每一次刷新都需要加载一次，所以封装一个方法。
    icheckcss("CategoryStatus");


    //以下部分可以封装为一个文件

    //加载icheck的样式，初始化加载一次，每一次刷新都需要加载一次，所以封装一个方法。
    function icheckcss(name) {
        $('[name=' + name + ']').iCheck({
            labelHover: false,
            cursor: true,
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
            increaseArea: '20%'
        });

    }

    //curd查按钮操作
    function categoryaction(btn, ac) {
        $('[name="CategoryBtn"]').removeClass("btn-primary").addClass("btn-default");
        $(btn).removeClass("btn-default").addClass("btn-primary");
        //$('#Category input').removeAttr("disabled");
        //$('#Category textarea').removeAttr("disabled");
        icheckcss("CategoryStatus");

        var thisCategoryName = $('#thisCategoryName').val();
        var thisID = $('#thisID').val();

        if (ac == 'addtop') {
            $('#CategoryParentName').val('根节点').prop("disabled", true);
            $('#CategoryParentID').val('1').removeAttr("disabled");
            $('#CategoryName').val('').removeAttr("disabled");
            $('#CategorySort').val('').removeAttr("disabled");
            $('#CategoryInfo').val('').removeAttr("disabled");
            $('input[type="radio"][name="CategoryStatus"]').removeAttr("disabled");
            $('#CategoryFrom').prop("action","/Category/Create")
            icheckcss("CategoryStatus");

        }
        if (ac == 'addnext') {
            if (thisID == 0)
            {
                alertconfirm('你尚未没有选择节点！');
            }
            else
            {
                $('#CategoryParentName').val(thisCategoryName);
                $('#CategoryParentID').val(thisID).removeAttr("disabled");
                $('#CategoryName').val('').removeAttr("disabled");
                $('#CategorySort').val('').removeAttr("disabled");
                $('#CategoryInfo').val('').removeAttr("disabled");
                $('input[type="radio"][name="CategoryStatus"]').removeAttr("disabled");
                $('#CategoryFrom').prop("action", "/Category/Create")
                icheckcss("CategoryStatus");
            }



        }
        if (ac == 'edit') {
            //需要重新获取这个栏目
            if (thisID == 0)
            { alertconfirm('你尚未没有选择节点！'); }
            else
            {
                $.ajax({
                    type: "get",
                    url: "/Category/GetOneCategory",
                    data: {
                        id: thisID
                    },
                    dataType: "json",
                    success: function (result) {
                        // $('#thisCategoryName').val(result.CategoryName).prop("disabled", true);
                        //  $('#thisID').val(result.ID).prop("disabled", true);
                        $('#CategoryParentName').val(result.CategoryParentName).prop("disabled", true);
                        $('#CategoryParentID').val(result.CategoryParentID).removeAttr("disabled");
                        $('#CategoryName').val(result.CategoryName).removeAttr("disabled");
                        $('#ID').val(result.ID).removeAttr("disabled");
                        $('#CategorySort').val(result.CategorySort).removeAttr("disabled");
                        $('#CategoryInfo').val(result.CategoryInfo).removeAttr("disabled");
                        $('input[type="radio"][name="CategoryStatus"][value=' + result.CategoryStatus.toString() + ']').prop("checked", "checked");
                        $('[name="CategoryStatus"]').removeAttr("disabled");
                        $('#CategoryFrom').prop("action", "/Category/Edit")
                        icheckcss("CategoryStatus");
                    },
                    error: function () {
                        alert("树形结构加载失败！")
                    }
                });
            }


        }
        if (ac == 'delete') {
            //弹出确认对话框即可
            if (thisID == 0)
            { alertconfirm('你尚未没有选择节点！'); }
            else
            {
                delconfirm(thisID, "/Category/Delete/");
                //$('#CategoryFrom').prop("action", "/Category/DeleteConfirmed/" + thisID)
                //icheckcss("CategoryStatus");
            }

        }


    }

    //加载树形菜单
    function LoadTreeDictionary()
    {
        $.ajax({
            type: "get",
            url: "/category/TreeJson",
            data: {
                id:0
            },
            dataType: "json",
            success: function (result) {
                $('#CategoryTreeview').treeview({
                    levels: 1,
                    data: result,
                    multiSelect: $('#chk-select-multi').is(':checked'),
                    onNodeSelected: function (event, node) {

                        $('[name="CategoryBtn"]').removeClass("btn-primary")
                        dictionary(node.id);
                        //  $('#DictionaryName').val(node.text);
                        //  $('#selectable-output').prepend('<p>' + node.text + node.tags + ' was selected</p>');
                        // alert('选中');
                    },
                    onNodeUnselected: function (event, node) {
                        //$('#selectable-output').prepend('<p>' + node.text + node.tags + ' was unselected</p>');
                        //  alert('不选');
                        $('#thisID').val('0');

                    },
                    onNodeCollapsed: function (event, node) {
                        // alert('关闭字段');

                    },
                    onNodeExpanded: function (event, node) {
                        // alert('展开字段');

                    }
                });
            },
            error: function () {
                alert("树形结构加载失败！")
            }
        });

    }

    //右侧加载选中项目
    function dictionary(nodeid) {
        $('[name="CategoryStatus"]').removeAttr("checked");
        $.ajax({
            type: "get",
            url: "/Category/GetOneCategory",
            data: {
                id: nodeid
            },
            dataType: "json",
            success: function (result) {

                $('#CategoryParentName').val(result.CategoryParentName).prop("disabled", true);
                $('#CategoryParentID').val(result.CategoryParentID).prop("disabled", true);
                $('#CategoryName').val(result.CategoryName).prop("disabled", true);
                $('#ID').val(result.ID).prop("disabled", true);
                $('#thisCategoryName').val(result.CategoryName).prop("disabled", true);
                $('#thisID').val(result.ID).prop("disabled", true);
                $('#CategorySort').val(result.CategorySort).prop("disabled", true);
                $('#CategoryInfo').val(result.CategoryInfo).prop("disabled", true);
                $('input[type="radio"][name="CategoryStatus"][value=' + result.CategoryStatus.toString() + ']').prop("checked", "checked");
                $('[name="CategoryStatus"]').prop("disabled", true);
                icheckcss("CategoryStatus");
            },
            error: function () {
                alert("树形结构加载失败！")
            }
        });

    }


    $('#CategoryFrom').bootstrapValidator({
        //        live: 'disabled',
        message: 'This value is not valid',
        feedbackIcons: {
            valid: 'glyphicon glyphicon-ok',
            invalid: 'glyphicon glyphicon-remove',
            validating: 'glyphicon glyphicon-refresh'
        },
        fields: {
            CategoryName: {
                validators: {
                    notEmpty: {
                        message: '名称不能为空'
                    }
                }
            },
            CategorySort: {
                validators: {
                    notEmpty: {
                        message: '排序不能为空'
                    },
                    numeric: {message: '排序只能是数字'}
                }
            },
            CategoryStatus: {
                validators: {
                    notEmpty: {
                        message: '状态不能为空'
                    }
                }
            }
        }
    });


</script>
    }